plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

ext {
	jdk_version = 8
}

sourceCompatibility = jdk_version
targetCompatibility = jdk_version

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	mavenLocal()
	jcenter()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	def fabric_deps = [
			"fabric-api-base"		   : "0.4.1+b4f4f6cdd0",
			"fabric-key-binding-api-v1": "1.0.8+c8aba2f3c8",
			"fabric-resource-loader-v0": "0.4.9+65d505fcd1"
	]
	for (dep in fabric_deps.entrySet()) {
		// does not work
		// def depModule = fabricApi.module(dep.getKey(), dep.getValue())
		def depStr = "net.fabricmc.fabric-api:" + dep.getKey() + ":" + dep.getValue()
		include(modImplementation(depStr))
	}

	//amecs api
	modCompileOnly("de.siphalor:amecsapi-multiversion:1.3.3+") {
		exclude(group: "de.siphalor")
		exclude(module: "lazydfu")
	}
	
	//nmuk
	modCompileOnly("de.siphalor:nmuk-multiversion:1.1+") {
		exclude(group: "de.siphalor")
		exclude(module: "lazydfu")
	}
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	options.encoding = "UTF-8"
	options.release = jdk_version
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}